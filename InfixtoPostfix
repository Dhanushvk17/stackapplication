InfixtoPostfix

import java.util.*;

class Main {
    static int pre(char op) {
        switch (op) {
            case '+': case '-': return 1;
            case '*': case '/': return 2;
            default: return -1;
        }
    }
    static String Intopo(String str) {
        StringBuilder res = new StringBuilder();
        Stack<Character> st = new Stack<>();
        
        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (Character.isLetterOrDigit(ch)) {
                res.append(ch);
            } 
            else if (ch == '(') {
                st.push(ch);
            } 
            else if (ch == ')') {
                while (!st.isEmpty() && st.peek() != '(') {
                    res.append(st.pop());
                }
                st.pop(); 
            } 
            else {
                while (!st.isEmpty() && pre(st.peek()) >= pre(ch)) {
                    res.append(st.pop());
                }
                st.push(ch);
            }
        }
        while (!st.isEmpty()) {
            res.append(st.pop());
        }
        
        return res.toString();
    }

    public static void main(String[] args) {
        Scanner obj=new Scanner(System.in);
        String infix =obj.nextLine();
        System.out.println("Postfix Expression: " + Intopo(infix));
    }
}
//(A+B)*(C/(D-E)+F)
